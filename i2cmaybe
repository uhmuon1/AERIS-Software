#include "pico/stdlib.h"
#include "hardware/i2c.h"
#include "hardware/gpio.h"

// I2C defines
#define I2C_PORT i2c0
#define I2C_SDA 4  // GPIO4 for SDA
#define I2C_SCL 5  // GPIO5 for SCL
#define I2C_FREQ 100000  // 100kHz standard mode

// Function to initialize I2C
void init_i2c() {
    // Initialize I2C port
    i2c_init(I2C_PORT, I2C_FREQ);
    
    // Set up I2C pins
    gpio_set_function(I2C_SDA, GPIO_FUNC_I2C);
    gpio_set_function(I2C_SCL, GPIO_FUNC_I2C);
    
    // Enable internal pull-ups
    gpio_pull_up(I2C_SDA);
    gpio_pull_up(I2C_SCL);
}

// Function to scan I2C bus
void scan_i2c() {
    printf("\nI2C Bus Scan\n");
    printf("   0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F\n");

    for (int addr = 0; addr < 128; addr++) {
        if (addr % 16 == 0) {
            printf("%02x ", addr);
        }

        // Try to read from the current address
        uint8_t rx_data;
        int ret = i2c_read_blocking(I2C_PORT, addr, &rx_data, 1, false);
        
        if (ret >= 0) {
            printf("*  "); // Device found
        } else {
            printf(".  "); // No device
        }

        if (addr % 16 == 15) {
            printf("\n");
        }
    }
}

int main() {
    // Initialize USB serial for output
    stdio_init_all();
    
    // Wait for USB serial to be ready
    sleep_ms(2000);
    
    printf("RP2040 I2C Scanner Starting...\n");
    
    // Initialize I2C
    init_i2c();
    
    // Main loop
    while (1) {
        scan_i2c();
        printf("\nScan complete. Waiting 5 seconds before next scan...\n");
        sleep_ms(5000);
    }

    return 0;
}
