void scan_i2c_addresses(void) {
    printf("\n=== Scanning I2C Addresses ===\n");
    uint8_t reg = BYTES_AVAILABLE_REG;
    
    // Try common GPS addresses
    uint8_t addresses[] = {0x42, 0x84, 0x77};  // Common GPS addresses
    
    for (int i = 0; i < sizeof(addresses); i++) {
        printf("Testing address 0x%02X: ", addresses[i]);
        
        // Try to write to the device
        int ret = i2c_write_blocking(GPS_I2C, addresses[i], &reg, 1, false);
        
        if (ret >= 0) {
            printf("DEVICE FOUND!\n");
            printf("Working address is: 0x%02X\n", addresses[i]);
            return;
        } else {
            printf("No response\n");
        }
        sleep_ms(100);
    }
    
    printf("\nNo GPS device found at common addresses.\n");
    printf("Performing full bus scan...\n");
    
    // Full bus scan
    for (int addr = 0x08; addr < 0x77; addr++) {
        printf("Scanning address 0x%02X: ", addr);
        
        int ret = i2c_write_blocking(GPS_I2C, addr, &reg, 1, false);
        
        if (ret >= 0) {
            printf("DEVICE FOUND!\n");
            return;
        } else {
            printf(".");
        }
        
        if (addr % 16 == 15) printf("\n");
        sleep_ms(10);
    }
    printf("\nScan complete.\n");
}


int main() {
    // Initialize USB serial first
    stdio_init_all();
    stdio_usb_init();
    sleep_ms(3000);
    
    printf("\n\n=== Starting GPS Debug Program ===\n");
    printf("Compiled on: %s %s\n", __DATE__, __TIME__);
    
    // Initialize LED
    gpio_init(LED_PIN);
    gpio_set_dir(LED_PIN, GPIO_OUT);
    printf("LED initialized\n");
    
    // Initialize I2C pins
    printf("\nConfiguring I2C pins...\n");
    gpio_set_function(SDA_PIN, GPIO_FUNC_I2C);
    gpio_set_function(SCL_PIN, GPIO_FUNC_I2C);
    
    // Enable internal pullups
    gpio_pull_up(SDA_PIN);
    gpio_pull_up(SCL_PIN);
    printf("Internal pullups enabled\n");
    
    sleep_ms(250);
    
    // Check initial pin states
    check_i2c_state();
    
    // Initialize I2C peripheral
    printf("\nInitializing I2C...\n");
    i2c_init(GPS_I2C, 100000);
    
    if (!i2c_get_write_available(GPS_I2C)) {
        printf("ERROR: I2C failed to initialize\n");
        while(1) {
            gpio_put(LED_PIN, 1);
            sleep_ms(100);
            gpio_put(LED_PIN, 0);
            sleep_ms(100);
        }
    }
    
    printf("I2C initialized successfully\n");
    
    // Run the I2C scan right after initialization
    scan_i2c_addresses();  // ADD THE SCAN HERE
    
    // Test I2C lines
    test_i2c_pins();
    
    printf("\n=== Starting main loop ===\n");
    
    while (true) {
        gpio_put(LED_PIN, 1);
        read_gps_data();
        check_i2c_state();
        sleep_ms(1000);
        gpio_put(LED_PIN, 0);
        sleep_ms(1000);
    }
    
    return 0;
}
