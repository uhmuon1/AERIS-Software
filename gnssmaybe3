uint8_t buffer[MAX_PAYLOAD_SIZE];
    uint8_t length = 0;
    
    // Request PVT data
    if (!send_ubx_message(i2c, UBX_CLASS_NAV, UBX_NAV_PVT, NULL, 0)) {
        printf("Failed to send message\n");
        return false;
    }
    
    // Wait for response
    sleep_ms(100);
    
    // Read response and print first byte
    if (i2c_read_blocking(i2c, GNSS_ADDR, buffer, 1, false) != 1) {
        printf("Failed to read first byte\n");
        return false;
    }
    printf("First byte: 0x%02X\n", buffer[0]);
    
    length = buffer[0];
    printf("Reported length: %d\n", length);
    if (length > MAX_PAYLOAD_SIZE) {
        printf("Length too large\n");
        return false;
    }
    
    // Read rest of data and print first few bytes
    if (i2c_read_blocking(i2c, GNSS_ADDR, buffer, length, false) != length) {
        printf("Failed to read full message\n");
        return false;
    }
    
    printf("First 10 bytes: ");
    for(int i = 0; i < 10 && i < length; i++) {
        printf("0x%02X ", buffer[i]);
    }
    printf("\n");
